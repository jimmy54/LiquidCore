#!/bin/bash

# In order to cross-compile node for Android using NDK, run:
#   source android-configure <path_to_ndk> [arch]
#
# By running android-configure with source, will allow environment variables to
# be persistent in current session. This is useful for installing native node
# modules with npm. Also, don't forget to set the arch in npm config using
# 'npm config set arch=<arch>'

unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     HOSTOS=linux
                HOSTPB=linux-x86_64 ;;
    Darwin*)    HOSTOS=mac
                HOSTPB=darwin-x86_64 ;;
esac
echo ${machine}

if [ -z "$2" ]; then
    ARCH=arm
else
    ARCH="$2"
fi

CC_VER="4.9"
case $ARCH in
    arm)
        DEST_CPU="$ARCH"
        SUFFIX="arm-linux-androideabi"
        TOOLCHAIN_NAME="$SUFFIX"
        API=16
        ;;
    x86)
        DEST_CPU="ia32"
        SUFFIX="i686-linux-android"
        TOOLCHAIN_NAME="$ARCH"
        API=16
        ;;
    x86_64)
        DEST_CPU="x64"
        SUFFIX="$ARCH-linux-android"
        TOOLCHAIN_NAME="$ARCH"
        API=21
        ;;
    arm64)
        DEST_CPU="$ARCH"
        SUFFIX="aarch64-linux-android"
        TOOLCHAIN_NAME="$SUFFIX"
        API=21
        ;;
    *)
        echo "Unsupported architecture provided: $ARCH"
        exit 1
        ;;
esac

NDK_PATH=$1

export TOOLCHAIN=$NDK_PATH/toolchains/llvm/prebuilt/$HOSTPB

export PATH=$TOOLCHAIN/bin:$PATH

target_host=$SUFFIX
case $ARCH in
    arm)
        target_host_clang="armv7a-linux-androideabi"
        ;;
    *)
        target_host_clang=$SUFFIX
        ;;
esac

export AR_target=$TOOLCHAIN/bin/$target_host-ar
export AS_target=$TOOLCHAIN/bin/$target_host_clang$API-clang
export CC_target=$TOOLCHAIN/bin/$target_host_clang$API-clang
export CXX_target=$TOOLCHAIN/bin/$target_host_clang$API-clang++
export LD_target=$TOOLCHAIN/bin/$target_host-ld
export STRIP_target=$TOOLCHAIN/bin/$target_host-strip
export LINK_target=$TOOLCHAIN/bin/$target_host_clang$API-clang++
export RANLIB_target=$TOOLCHAIN/bin/$target_host-ranlib

export AR_host=ar
export AS_host=clang
export CC_host=clang
export CXX_host=clang++
export LD_host=ld
export STRIP_host=strip
export LINK_host=clang++

GYP_DEFINES="target_arch=$ARCH"
GYP_DEFINES+=" v8_target_arch=$DEST_CPU"
GYP_DEFINES+=" android_target_arch=$ARCH"
GYP_DEFINES+=" host_os=$HOSTOS OS=android"
export GYP_DEFINES

if [ -f "configure" ]; then
    ./configure \
        --dest-cpu=$DEST_CPU \
        --dest-os=android \
        --with-intl=small-icu \
        --openssl-no-asm \
        --cross-compiling \
        --with-snapshot \
        --shared
fi
